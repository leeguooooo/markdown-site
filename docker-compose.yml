services:
  misonote-markdown:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: misonote-markdown
    ports:
      - "3001:3001"
    volumes:
      # 持久化文档目录
      - ./docs:/app/docs
      # 持久化数据目录
      - ./data:/app/data
      # 持久化日志目录
      - ./logs:/app/logs
      # 持久化环境配置
      - ./.env:/app/.env
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOSTNAME=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - markdown-network

  # MCP 客户端服务
  mcp-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: misonote-mcp-client
    ports:
      - "3002:3002"
    volumes:
      - ./mcp-client:/app/mcp-client
      - ./.env:/app/.env
    environment:
      - NODE_ENV=production
      - MCP_SERVER_URL=http://misonote-markdown:3001
      - MCP_API_KEY=${MCP_API_KEY:-}
    depends_on:
      - misonote-markdown
    restart: unless-stopped
    command: ["node", "/app/mcp-client/misonote-mcp-client.js"]
    networks:
      - markdown-network
    profiles:
      - mcp

  # 可选：添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: misonote-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - misonote-markdown
    restart: unless-stopped
    networks:
      - markdown-network
    profiles:
      - nginx

networks:
  markdown-network:
    driver: bridge

volumes:
  docs_data:
  app_data:
  logs_data:
